{
  "version": 3,
  "sources": ["../../three/examples/jsm/curves/CurveExtras.js"],
  "sourcesContent": ["import {\n\tCurve,\n\tVector3\n} from 'three';\n\n/**\n * A bunch of parametric curves\n *\n * Formulas collected from various sources\n * http://mathworld.wolfram.com/HeartCurve.html\n * http://en.wikipedia.org/wiki/Viviani%27s_curve\n * http://www.mi.sanu.ac.rs/vismath/taylorapril2011/Taylor.pdf\n * https://prideout.net/blog/old/blog/index.html@p=44.html\n */\n\n// GrannyKnot\n\nclass GrannyKnot extends Curve {\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt = 2 * Math.PI * t;\n\n\t\tconst x = - 0.22 * Math.cos( t ) - 1.28 * Math.sin( t ) - 0.44 * Math.cos( 3 * t ) - 0.78 * Math.sin( 3 * t );\n\t\tconst y = - 0.1 * Math.cos( 2 * t ) - 0.27 * Math.sin( 2 * t ) + 0.38 * Math.cos( 4 * t ) + 0.46 * Math.sin( 4 * t );\n\t\tconst z = 0.7 * Math.cos( 3 * t ) - 0.4 * Math.sin( 3 * t );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( 20 );\n\n\t}\n\n}\n\n// HeartCurve\n\nclass HeartCurve extends Curve {\n\n\tconstructor( scale = 5 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt *= 2 * Math.PI;\n\n\t\tconst x = 16 * Math.pow( Math.sin( t ), 3 );\n\t\tconst y = 13 * Math.cos( t ) - 5 * Math.cos( 2 * t ) - 2 * Math.cos( 3 * t ) - Math.cos( 4 * t );\n\t\tconst z = 0;\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n// Viviani's Curve\n\nclass VivianiCurve extends Curve {\n\n\tconstructor( scale = 70 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt = t * 4 * Math.PI; // normalized to 0..1\n\t\tconst a = this.scale / 2;\n\n\t\tconst x = a * ( 1 + Math.cos( t ) );\n\t\tconst y = a * Math.sin( t );\n\t\tconst z = 2 * a * Math.sin( t / 2 );\n\n\t\treturn point.set( x, y, z );\n\n\t}\n\n}\n\n// KnotCurve\n\nclass KnotCurve extends Curve {\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt *= 2 * Math.PI;\n\n\t\tconst R = 10;\n\t\tconst s = 50;\n\n\t\tconst x = s * Math.sin( t );\n\t\tconst y = Math.cos( t ) * ( R + s * Math.cos( t ) );\n\t\tconst z = Math.sin( t ) * ( R + s * Math.cos( t ) );\n\n\t\treturn point.set( x, y, z );\n\n\t}\n\n}\n\n\n// HelixCurve\n\nclass HelixCurve extends Curve {\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst a = 30; // radius\n\t\tconst b = 150; // height\n\n\t\tconst t2 = 2 * Math.PI * t * b / 30;\n\n\t\tconst x = Math.cos( t2 ) * a;\n\t\tconst y = Math.sin( t2 ) * a;\n\t\tconst z = b * t;\n\n\t\treturn point.set( x, y, z );\n\n\t}\n\n}\n\n// TrefoilKnot\n\nclass TrefoilKnot extends Curve {\n\n\tconstructor( scale = 10 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt *= Math.PI * 2;\n\n\t\tconst x = ( 2 + Math.cos( 3 * t ) ) * Math.cos( 2 * t );\n\t\tconst y = ( 2 + Math.cos( 3 * t ) ) * Math.sin( 2 * t );\n\t\tconst z = Math.sin( 3 * t );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n// TorusKnot\n\nclass TorusKnot extends Curve {\n\n\tconstructor( scale = 10 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst p = 3;\n\t\tconst q = 4;\n\n\t\tt *= Math.PI * 2;\n\n\t\tconst x = ( 2 + Math.cos( q * t ) ) * Math.cos( p * t );\n\t\tconst y = ( 2 + Math.cos( q * t ) ) * Math.sin( p * t );\n\t\tconst z = Math.sin( q * t );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n// CinquefoilKnot\n\nclass CinquefoilKnot extends Curve {\n\n\tconstructor( scale = 10 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst p = 2;\n\t\tconst q = 5;\n\n\t\tt *= Math.PI * 2;\n\n\t\tconst x = ( 2 + Math.cos( q * t ) ) * Math.cos( p * t );\n\t\tconst y = ( 2 + Math.cos( q * t ) ) * Math.sin( p * t );\n\t\tconst z = Math.sin( q * t );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n\n// TrefoilPolynomialKnot\n\nclass TrefoilPolynomialKnot extends Curve {\n\n\tconstructor( scale = 10 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt = t * 4 - 2;\n\n\t\tconst x = Math.pow( t, 3 ) - 3 * t;\n\t\tconst y = Math.pow( t, 4 ) - 4 * t * t;\n\t\tconst z = 1 / 5 * Math.pow( t, 5 ) - 2 * t;\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\nfunction scaleTo( x, y, t ) {\n\n\tconst r = y - x;\n\treturn t * r + x;\n\n}\n\n// FigureEightPolynomialKnot\n\nclass FigureEightPolynomialKnot extends Curve {\n\n\tconstructor( scale = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt = scaleTo( - 4, 4, t );\n\n\t\tconst x = 2 / 5 * t * ( t * t - 7 ) * ( t * t - 10 );\n\t\tconst y = Math.pow( t, 4 ) - 13 * t * t;\n\t\tconst z = 1 / 10 * t * ( t * t - 4 ) * ( t * t - 9 ) * ( t * t - 12 );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n// DecoratedTorusKnot4a\n\nclass DecoratedTorusKnot4a extends Curve {\n\n\tconstructor( scale = 40 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tt *= Math.PI * 2;\n\n\t\tconst x = Math.cos( 2 * t ) * ( 1 + 0.6 * ( Math.cos( 5 * t ) + 0.75 * Math.cos( 10 * t ) ) );\n\t\tconst y = Math.sin( 2 * t ) * ( 1 + 0.6 * ( Math.cos( 5 * t ) + 0.75 * Math.cos( 10 * t ) ) );\n\t\tconst z = 0.35 * Math.sin( 5 * t );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n// DecoratedTorusKnot4b\n\nclass DecoratedTorusKnot4b extends Curve {\n\n\tconstructor( scale = 40 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst fi = t * Math.PI * 2;\n\n\t\tconst x = Math.cos( 2 * fi ) * ( 1 + 0.45 * Math.cos( 3 * fi ) + 0.4 * Math.cos( 9 * fi ) );\n\t\tconst y = Math.sin( 2 * fi ) * ( 1 + 0.45 * Math.cos( 3 * fi ) + 0.4 * Math.cos( 9 * fi ) );\n\t\tconst z = 0.2 * Math.sin( 9 * fi );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n\n// DecoratedTorusKnot5a\n\nclass DecoratedTorusKnot5a extends Curve {\n\n\tconstructor( scale = 40 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst fi = t * Math.PI * 2;\n\n\t\tconst x = Math.cos( 3 * fi ) * ( 1 + 0.3 * Math.cos( 5 * fi ) + 0.5 * Math.cos( 10 * fi ) );\n\t\tconst y = Math.sin( 3 * fi ) * ( 1 + 0.3 * Math.cos( 5 * fi ) + 0.5 * Math.cos( 10 * fi ) );\n\t\tconst z = 0.2 * Math.sin( 20 * fi );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\n// DecoratedTorusKnot5c\n\nclass DecoratedTorusKnot5c extends Curve {\n\n\tconstructor( scale = 40 ) {\n\n\t\tsuper();\n\n\t\tthis.scale = scale;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst fi = t * Math.PI * 2;\n\n\t\tconst x = Math.cos( 4 * fi ) * ( 1 + 0.5 * ( Math.cos( 5 * fi ) + 0.4 * Math.cos( 20 * fi ) ) );\n\t\tconst y = Math.sin( 4 * fi ) * ( 1 + 0.5 * ( Math.cos( 5 * fi ) + 0.4 * Math.cos( 20 * fi ) ) );\n\t\tconst z = 0.35 * Math.sin( 15 * fi );\n\n\t\treturn point.set( x, y, z ).multiplyScalar( this.scale );\n\n\t}\n\n}\n\nexport {\n\tGrannyKnot,\n\tHeartCurve,\n\tVivianiCurve,\n\tKnotCurve,\n\tHelixCurve,\n\tTrefoilKnot,\n\tTorusKnot,\n\tCinquefoilKnot,\n\tTrefoilPolynomialKnot,\n\tFigureEightPolynomialKnot,\n\tDecoratedTorusKnot4a,\n\tDecoratedTorusKnot4b,\n\tDecoratedTorusKnot5a,\n\tDecoratedTorusKnot5c\n};\n"],
  "mappings": "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",
  "names": []
}
